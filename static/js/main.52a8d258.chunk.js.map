{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","border","hover","fill","transition","pressed","App","useState","tooltipContent","setTooltipContent","data","setData","Confirmed","setConfirmed","deaths","setdeaths","recovered","setrecovered","active","setactive","name","setname","setTs","ConfirmedI","setConfirmedI","deathsI","setdeathsI","recoveredI","setrecoveredI","activeI","setactiveI","colorScale","reduce","max","item","value","scaleQuantile","domain","map","d","range","onMouseEnter","geo","current","properties","st_nm","state","onMouseLeave","React","useEffect","fetch","then","res","json","console","log","total","confirmed","lastRefreshed","arr","ress","statewise","ds","push","i","length","id","List","className","style","backgroundColor","fontFamily","color","Card","onClick","width","overflow","fontsize","whiteSpace","display","padding","fontWeight","maxLine","projectionConfig","projection","height","data-tip","geography","geographies","find","s","key","rsmKey","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.52a8d258.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MediaQuery from 'react-responsive'\nimport { Card, Button, CardImg, CardTitle, CardText, CardDeck, CardSubtitle, CardBody } from 'reactstrap';\n\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { scaleQuantile } from 'd3-scale';\nimport ReactTooltip from 'react-tooltip';\nimport LinearGradient from './LinearGradient.js';\nimport './App.css';\nimport './index.css'\n\n/**\n* Courtesy: https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\n* Looking topojson for other countries/world?\n* Visit: https://github.com/markmarkoh/datamaps\n*/\n\nconst INDIA_TOPO_JSON = require('./india.topo.json');\n\nconst PROJECTION_CONFIG = {\n  scale: 600,\n  center: [78.9629, 22.5937] // always in [East Latitude, North Longitude]\n};\n\n// Red Variants\nconst COLOR_RANGE = [\n  '#ffd4cc',\n  '#ffbeb3',\n  '#ffa899',\n  '#ff9380',\n  '#ff7d66',\n  '#ff7d66',\n  '#ff5233',\n  '#ff3c1a',\n  '#b31b00',\n  '#660f00'\n];\n\nconst DEFAULT_COLOR = '#EEE';\n\nconst geographyStyle = {\n  default: {\n    outline: 'none',\n    border: '5px'\n  },\n  hover: {\n    fill: '#ccc',\n    transition: 'all 250ms',\n    outline: 'none'\n  },\n  pressed: {\n    outline: 'none'\n  }\n};\n\nfunction App() {\n  const [tooltipContent, setTooltipContent] = useState('');\n  const [data, setData] = useState([]);\n    const [Confirmed, setConfirmed] = useState();\n      const [deaths, setdeaths] = useState();\n      const [recovered, setrecovered] = useState();\n      const [active, setactive] = useState();\n      const [name, setname] = useState();\n      const [Ts, setTs] = useState();\n      const [ConfirmedI, setConfirmedI] = useState();\n        const [deathsI, setdeathsI] = useState();\n        const [recoveredI, setrecoveredI] = useState();\n        const [activeI, setactiveI] = useState();\n        const [nameI, setnameI] = useState();\n\n\n\n\n\n  const gradientData = {\n    fromColor: COLOR_RANGE[0],\n    toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\n    min: 0,\n    max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\n  };\n\n  const colorScale = scaleQuantile()\n    .domain(data.map(d => d.value))\n    .range(COLOR_RANGE);\n\n  const onMouseEnter = (geo, current = { value: 'NA' }) => {\n    return () => {\n      setTooltipContent(`${geo.properties.st_nm}: ${current.value}`);\nsetConfirmed(`${current.value}`)\nsetdeaths(`${current.deaths}`)\nsetrecovered(`${current.recovered}`)\nsetactive(`${current.active}`)\nsetname(`${current.state}`==='Jammu and Kashmir'?'J&K':`${current.state}`==='Dadra and Nagar Haveli'?'Dadra':`${current.state}`)\n    };\n  };\n\n  const onMouseLeave = () => {\n    setTooltipContent('');\n    setConfirmed(ConfirmedI)\n    setdeaths(deathsI)\n    setrecovered(recoveredI)\n    setactive(activeI)\n\n    setname('India')\n\n  };\n\n  const onChangeButtonClick = () => {\n    setData([\n      { id: 'AP', state: 'Andhra Pradesh', value: 2}]);\n  };\n\n\n\n  React.useEffect(() => {\n   fetch('https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise')\n     .then(res => res.json())\n     .then(d => {\n       console.log(d.data.total);\n       setConfirmed(d.data.total.confirmed)\n       setdeaths(d.data.total.deaths)\n       setrecovered(d.data.total.recovered)\n       setactive(d.data.total.active)\n       setname('India')\n       setTs(d.data.lastRefreshed)\n       setConfirmedI(d.data.total.confirmed)\n       setdeathsI(d.data.total.deaths)\n       setrecoveredI(d.data.total.recovered)\n       setactiveI(d.data.total.active)\n       setname('India')\nsetData(List(d));\n\n     });\n }, []);\n\n\n\n  return (\n    <div className=\"container\" style={{ backgroundColor: \"#ffffff\"}}>\n    <div className=\"full-width-height container\" >\n      <div className=\"card-body\">\n      <h5 className=\"card-title\"  style={{fontFamily:\"Bree Serif\" ,color:'#333333'}}><center><b>COVID-19 INDIA STATUS</b></center></h5>\n\n\n      <ReactTooltip>{tooltipContent}</ReactTooltip>\n      <div className=\"container\">\n\n      <div className=\"row justify-content-center\" >\n\n      <Card onClick={onChangeButtonClick} style={{ width: '18%',backgroundColor: \"#e6e6ff\",overflow:'hidden',fontsize:'10px',whiteSpace: 'pre-wrap', display: 'block', padding: \"20px\", border: 'none',color: \"#6666ff\",fontFamily: \"Bree Serif\", fontWeight: 'bold'}}  >\n<center maxLine='1' >{name}</center>\n</Card>\n\n      <Card style={{ width: '10%',backgroundColor: \"#ffe0b3\",padding: \"10px\", border: 'none',color: \"#cc7a00\",fontFamily: \"Bree Serif\", fontWeight: 'bold'}}>\n<center><div >Confirmed</div><div>{Confirmed}</div></center>\n</Card>\n<Card style={{ width: '10%',backgroundColor: \"#ccf2ff\",padding: \"10px\" ,border: 'none',color: \"#00ace6\",fontFamily: \"Bree Serif\", fontWeight: 'bold'}}>\n<center><div>Active</div><div>{active}</div></center>\n</Card>\n\n<Card style={{ width: '10%',backgroundColor: \"#ddffcc\",padding: \"10px\",border: 'none',color: \"#408000\",fontFamily: \"Bree Serif\", fontWeight: 'bold' }}>\n<center><div>Recovered</div><div>{recovered}</div></center>\n</Card>\n<Card style={{ width: '10%',backgroundColor: \"#ffd4cc\",padding: \"10px\",border: 'none',color: \"red\",fontFamily: \"Bree Serif\", fontWeight: 'bold' }}>\n<center><div>Death</div><div> {deaths}</div></center>\n</Card>\n</div>\n</div>\n\n\n        <ComposableMap\n          projectionConfig={PROJECTION_CONFIG}\n          projection=\"geoMercator\"\n          width={690}\n          height={400}\n          data-tip=\"\"\n        >\n\n          <Geographies geography={INDIA_TOPO_JSON}>\n            {({ geographies }) =>\n              geographies.map(geo => {\n                console.log(data.state +\" ,\"+ geo.properties.name);\n                const current = data.find(s => s.state === geo.properties.st_nm);\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\n                    style={geographyStyle}\n                    onMouseEnter={onMouseEnter(geo, current)}\n                    onMouseLeave={onMouseLeave}\n                  />\n                );\n              })\n\n            }\n          </Geographies>\n        </ComposableMap>\n</div>\n\n\n  {    /*  <div className=\"center\">\n          <button className=\"mt16\" onClick={onChangeButtonClick}>Change</button>\n        </div> */}\n    </div>\n    </div>\n\n  );\n}\nfunction List(d) {\nvar arr = [];\nvar ress=[];\nd.data.statewise.map(ds => (\n\n\n      arr.push([ds.state,ds.confirmed,ds.deaths,ds.recovered,ds.active])\n\n\n  ))\n\n  for (var i = 0; i < arr.length; i++) {\n\n    if(arr[i][0]==='Maharashtra')\n    {\n      ress.push({ id: 'MH', state: 'Maharashtra', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Tamil Nadu')\n    {\n      ress.push({ id: 'TN', state: 'Tamil Nadu', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Kerala')\n    {\n      ress.push({ id: 'KL', state: 'Kerala', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Madhya Pradesh')\n    {\n      ress.push({ id: 'MP', state: 'Madhya Pradesh', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Delhi')\n    {\n      ress.push({ id: 'DL', state: 'Delhi', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Karnataka')\n    {\n      ress.push({ id: 'KA', state: 'Karnataka', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Rajasthan')\n    {\n      ress.push({ id: 'RJ', state: 'Rajasthan', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Chhattisgarh')\n    {\n      ress.push({ id: 'CT', state: 'Chhattisgarh', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Telangana')\n    {\n      ress.push({ id: 'TS', state: 'Telangana', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Uttar Pradesh')\n    {\n      ress.push({ id: 'UP', state: 'Uttar Pradesh', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Odisha')\n    {\n      ress.push({ id: 'OD', state: 'Odisha', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Jharkhand')\n    {\n      ress.push({ id: 'JH', state: 'Jharkhand', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Punjab')\n    {\n      ress.push({ id: 'PB', state: 'Punjab', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Gujarat')\n    {\n      ress.push({ id: 'GJ', state: 'Gujarat', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n    }\n    else if(arr[i][0]==='Manipur')\n   {\n     ress.push({ id: 'MN', state: 'Manipur', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Meghalaya')\n   {\n     ress.push({ id: 'ML', state: 'Meghalaya', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Mizoram')\n   {\n     ress.push({ id: 'MZ', state: 'Mizoram', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   } else if(arr[i][0]==='Nagaland')\n   {\n     ress.push({ id: 'NL', state: 'Nagaland', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n\n   else if(arr[i][0]==='Andhra Pradesh')\n   {\n     ress.push({ id: 'AP', state: 'Andhra Pradesh', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='West Bengal')\n   {\n     ress.push({ id: 'WB', state: 'West Bengal', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Jammu and Kashmir')\n   {\n     ress.push({ id: 'JK', state: 'Jammu and Kashmir', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Himachal Pradesh')\n   {\n     ress.push({ id: 'HP', state: 'Himachal Pradesh', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Haryana')\n   {\n     ress.push({ id: 'HR', state: 'Haryana', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Uttarakhand')\n   {\n     ress.push({ id: 'UK', state: 'Uttarakhand', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Bihar')\n   {\n     ress.push({ id: 'BR', state: 'Bihar', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Tripura')\n   {\n     ress.push({ id: 'TR', state: 'Tripura', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Assam')\n   {\n     ress.push({ id: 'AS', state: 'Assam', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Goa')\n   {\n     ress.push({ id: 'GA', state: 'Goa', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Sikkim')\n   {\n     ress.push({ id: 'SK', state: 'Sikkim', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Arunachal Pradesh')\n   {\n     ress.push({ id: 'AR', state: 'Arunachal Pradesh', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Ladakh')\n   {\n     ress.push({ id: 'LD', state: 'Ladakh', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n\n\n   else if(arr[i][0]==='Dadra and Nagar Haveli')\n   {\n\n     ress.push({ id: 'DDd', state: 'Dadra and Nagar Haveli', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n   else if(arr[i][0]==='Chandigarh')\n   {\n\n     ress.push({ id: 'DDd', state: 'Chandigarh', value: arr[i][1],deaths :arr[i][2],recovered:arr[i][3],active:arr[i][4]})\n\n   }\n\n}\n\n  if (true) {\n\n/*console.log(ress)*/\n      return ress;\n  }\n\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}